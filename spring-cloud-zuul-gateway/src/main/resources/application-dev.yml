server:
  port: 8085
  servlet:
    context-path: /
  undertow:
    # 设置IO线程数, 它主要执行非阻塞的任务,它们会负责多个连接, 默认设置每个CPU核心一个线程
    # 阻塞任务线程池, 当执行类似servlet请求阻塞操作, undertow会从这个线程池中取得线程,它的值设置取决于系统的负载
    # 以下的配置会影响buffer,这些buffer会用于服务器连接的IO操作,有点类似netty的池化内存管理
    # 每块buffer的空间大小,越小的空间被利用越充分
    buffer-size: 1024
    # 是否分配的直接内存
    direct-buffers: true
    threads:
      io: 8
      worker: 128
spring:
  application:
    name: gateway-zuul
  cloud:
    consul:
      host: 127.0.0.1
      port: 8500
      discovery:
      instance-id: ${spring.application.name}:${spring.cloud.client.ipAddress}:${spring.application.instance_id:${server.port}}
      ip-address: true
zuul:
  semaphore:
    max-semaphores: 5000 #设置全部路由最大信号量
  ribbon-isolation-strategy: thread
  threadPool:
    useSeparateThreadPools: true
  routes:
    user:
      path: /consumer/**
      serviceId: consumer
      semaphore:
        maxSemaphores: 200
  host:
    max-total-connections: 200 # 默认值
    max-per-route-connections: 20 # 默认值
#设置全局ribbon
ribbon:
  ReadTimeout: 60000
  ConnectTimeout: 60000
  MaxAutoRetriesNextServer: 1
  MaxAutoRetries: 1
hystrix:
  threadpool:
    default:
      coreSize: 1000   #线程池数量
  command:
    default:
      execution:
        isolation:
          thread:
            timeoutInMilliseconds: 60000  #发生熔断的超时时间
            strategy: SEMAPHORE   #隔离策略
            semaphore:
              max-semaphores: 2000 #信号量大小