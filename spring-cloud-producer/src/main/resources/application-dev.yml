server:
  servlet:
    context-path: /
    session:
      timeout: 2h
  port: 8080
  undertow:
    # 设置IO线程数, 它主要执行非阻塞的任务,它们会负责多个连接, 默认设置每个CPU核心一个线程
    io-threads: 4
    # 阻塞任务线程池, 当执行类似servlet请求阻塞操作, undertow会从这个线程池中取得线程,它的值设置取决于系统的负载
    worker-threads: 64
    # 以下的配置会影响buffer,这些buffer会用于服务器连接的IO操作,有点类似netty的池化内存管理
    # 每块buffer的空间大小,越小的空间被利用越充分
    buffer-size: 1024
    # 是否分配的直接内存
    direct-buffers: true
spring:
  main:
    banner-mode: LOG
  application:
    name: producer
  cloud:
    consul:
      host: 127.0.0.1
      port: 8500
      discovery:
        register: true
        prefer-ip-address: true
        health-check-path: /actuator/health
        health-check-interval: 10s
        ip-address: ${HOST_IP:127.0.0.1}
        instance-id: ${spring.application.name}-${spring.cloud.consul.discovery.ip-address}
        health-check-critical-timeout: 1s
        service-name: ${spring.application.name}
      enabled: true
#日志配置
logging:
  config:
    classpath: logback-spring.xml